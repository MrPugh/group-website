{ "title" : "2018",
  "papers": [
		{
	    "bibitem": "@inproceedings{DBLP:conf/sac/Cruz-FilipeMP18,  author = {Lu{\\'{\\i}}s Cruz{-}Filipe and  Fabrizio Montesi and  Marco Peressotti},  editor = {Hisham M. Haddad and  Roger L. Wainwright and  Richard Chbeir},  title = {Communications in choreographies, revisited},  booktitle = {Proceedings of the 33rd Annual {ACM} Symposium on Applied Computing,  {SAC} 2018, Pau, France, April 09-13, 2018},  pages = {1248--1255},  publisher = {{ACM}},  year = {2018},  url = {http://doi.acm.org/10.1145/3167132.3167267},  doi = {10.1145/3167132.3167267},  timestamp = {Wed, 04 Jul 2018 14:28:07 +0200},  biburl = {https://dblp.org/rec/bib/conf/sac/Cruz-FilipeMP18},  bibsource = {dblp computer science bibliography, https://dblp.org} } ",
			"links": [
				{ "name" : "technical report",
					"link" : "https://arxiv.org/abs/1711.10201",
					"icon" : "arxiv"}
			],
	    "tags": [ "Choreographic Programming" ],
	    "authors": [ "Luís Cruz-Filipe", "Fabrizio Montesi", "Marco Peressotti" ],
	    "abstract": "Choreographic Programming is a paradigm for developing correct-by-construction concurrent programs, by writing high-level descriptions of the desired communications and then synthesising process implementations automatically. So far, choreographic programming has been explored in the <i>monadic</i> setting: interaction terms express point-to-point communications of a single value. However, real-world systems often rely on interactions of <i>polyadic</i> nature, where multiple values are communicated among two or more parties, like multicast, scatter-gather, and atomic exchanges.<br />We introduce a new model for choreographic programming equipped with a primitive for grouped interactions that subsumes all the above scenarios. Intuitively, grouped interactions can be thought of as being carried out as one single interaction. In practice, they are implemented by processes that carry them out in a concurrent fashion. After formalising the intuitive semantics of grouped interactions, we prove that choreographic programs and their implementations are correct and deadlock-free by construction.",
	    "non_group" : false,
	    "type": "Conference"
	  },
		{
	    "bibitem": "@inproceedings{DBLP:conf/sac/MontesiW18,  author = {Fabrizio Montesi and  Janine Weber},  editor = {Hisham M. Haddad and  Roger L. Wainwright and  Richard Chbeir},  title = {From the decorator pattern to circuit breakers in microservices},  booktitle = {Proceedings of the 33rd Annual {ACM} Symposium on Applied Computing,  {SAC} 2018, Pau, France, April 09-13, 2018},  pages = {1733--1735},  publisher = {{ACM}},  year = {2018},  url = {http://doi.acm.org/10.1145/3167132.3167427},  doi = {10.1145/3167132.3167427},  timestamp = {Wed, 04 Jul 2018 14:28:07 +0200},  biburl = {https://dblp.org/rec/bib/conf/sac/MontesiW18},  bibsource = {dblp computer science bibliography, https://dblp.org} }",
			"links": [
				{ "link" : "https://www.fabriziomontesi.com/files/mw18.pdf" }
			],
	    "tags": [ "Jolie", "Microservices" ],
	    "authors": [ "Fabrizio Montesi" ],
	    "abstract": "We analyse different deployment setups for circuit breaker, a design pattern for preventing cascading failures by guarding calls towards a target service. Then, we define a unifying implementation strategy in the setting of microservices, by using the Jolie programming language. Our implementation captures all setups with a single program, by interpreting a circuit breaker as a decorator that is generic on the interface of its target service.",
	    "non_group" : false,
	    "type": "Conference"
	  },
	  {
    "bibitem": "@article{CGMP17b, title = \"Cloud-of-Things meets Mobility-as-a-Service: An insider threat perspective\", journal = \"Computers & Security\", volume = \"74\", pages = \"277 - 295\", year = \"2018\", issn = \"0167-4048\", doi = \"https://doi.org/10.1016/j.cose.2017.10.006\", url = \"http://www.sciencedirect.com/science/article/pii/S0167404817302134\", author = \"Franco Callegati and Saverio Giallorenzo and Andrea Melis and Marco Prandini\", keywords = \"Mobility-as-a-Service, Federated platforms, Insider threat, Cloud-of-Things, Internet-of-Things\" }",
    "links": [ { "link" : "http://www.saveriogiallorenzo.com/publications/cs2017/" } ],
    "abstract": "Mobility-as-a-Service (MaaS) applies the everything-as-a-service paradigm of Cloud Computing to transportation: a MaaS provider offers to its users the dynamic composition of solutions of different travel agencies into a single, consistent interface. Traditionally, transits and data on mobility belong to a scattered plethora of operators. Thus, we argue that the economic model of MaaS is that of federations of providers, each trading its resources to coordinate multi-modal solutions for mobility. Such flexibility comes with many security and privacy concerns, of which insider threat is one of the most prominent. In this paper, we revise and extend previous work where we classified the potential threats of individual operators and markets of federated MaaS providers, proposing appropriate countermeasures to mitigate the problems. In addition, we consider the emerging case of Cloud-of-Things (CoT) for mobility, i.e., networks of ubiquitous, pervasive devices that provide real-time data on objects and people. Automation and pervasiveness of CoT make an additional attack surface for insiders. In an effort to limit such phenomenon, we present an overlay networking architecture, based on gossip protocols, that lets users share information on mobility with each other. A peculiarity of the architecture is that it both constrains the quality and quantity of data obtainable by insiders, optimizing the routing of requests to involve only users that are able to answer them.",
    "tags": [ "Smart Cities", "Internet of Things", "Security", "Microservices" ],
    "authors": ["Saverio Giallorenzo"],
    "type": "Journal",
    "non_group": true
  },{
    "bibitem": "@inproceedings{GMG18,  author = {Saverio Giallorenzo and  Fabrizio Montesi and  Maurizio Gabbrielli},  title = {Applied Choreographies},  booktitle = {Formal Techniques for Distributed Objects, Components, and Systems  - 38th {IFIP} {WG} 6.1 International Conference, {FORTE} 2018, Held  as Part of the 13th International Federated Conference on Distributed  Computing Techniques, DisCoTec 2018, Madrid, Spain, June 18-21, 2018,  Proceedings},  pages = {21--40},  year = {2018},  url = {https://doi.org/10.1007/978-3-319-92612-4_2},  doi = {10.1007/978-3-319-92612-4_2},  timestamp = {Wed, 30 May 2018 14:24:03 +0200},  biburl = {https://dblp.org/rec/bib/conf/forte/GiallorenzoMG18},  bibsource = {dblp computer science bibliography, https://dblp.org},  publisher = {Springer}, }",
    "links": [
      { "link": "http://www.saveriogiallorenzo.com/publications/forte2018/" }
    ],
    "abstract": "Choreographic Programming is a paradigm for distributed programming, where high-level \"Alice and Bob\" descriptions of communications (choreographies) are used to synthesise correct-by-construction programs. However, implementations of choreographic models use message routing technologies distant from their related theoretical models (e.g., CCS/π channels). This drives implementers to mediate discrepancies with the theory through undocumented, unproven adaptations, weakening the reliability of their implementations. As a solution, we propose the framework of Applied Choreographies (AC). In AC, programmers write choreographies in a language that follows the standard syntax and semantics of previous works. Then, choreographies are compiled to a real-world execution model for Service-Oriented Computing (SOC). To manage the complexity of this task, our compilation happens in three steps, respectively dealing with: implementing name-based communications using the concrete mechanism found in SOC, projecting a choreography to a set of processes, and translating processes to a distributed implementation in terms of services.",
    "tags" : [ "Choreographic Programming", "Session Types" ],
    "authors" : [ "Saverio Giallorenzo" , "Fabrizio Montesi" ],
    "type" : "Conference"
  },{
		"bibitem": "@article{DBLP:journals/dc/CarboneMS18,  author = {Marco Carbone and  Fabrizio Montesi and  Carsten Sch{\\\"{u}}rmann},  title = {Choreographies, logically},  journal = {Distributed Computing},  volume = {31},  number = {1},  pages = {51--67},  year = {2018},  url = {https://doi.org/10.1007/s00446-017-0295-1},  doi = {10.1007/s00446-017-0295-1},  timestamp = {Thu, 25 Jan 2018 11:13:07 +0100},  biburl = {https://dblp.org/rec/bib/journals/dc/CarboneMS18},  bibsource = {dblp computer science bibliography, https://dblp.org} }",
		"links": [
			{ "link": "http://fabriziomontesi.com/files/cms18.pdf" }
		],
		"abstract": "In Choreographic Programming, a distributed system is programmed by giving a choreography, a global description of its interactions, instead of separately specifying the behaviour of each of its processes. Process implementations in terms of a distributed language can then be automatically projected from a choreography. We present Linear Compositional Choreographies (LCC), a proof theory for reasoning about programs that modularly combine choreographies with processes. Using LCC, we logically reconstruct a semantics and a projection procedure for programs. For the first time, we also obtain a procedure for extracting choreographies from process terms.",
		"tags" : [ "Choreographic Programming", "Process Calculi", "Logic" ],
		"authors" : [ "Fabrizio Montesi" ],
		"type" : "Journal"
	},
  {
    "bibitem": "@inproceedings{DBLP:conf/hicss/GabbrielliGLZ18,  author = {Maurizio Gabbrielli and  Saverio Giallorenzo and  Ivan Lanese and  Stefano Pio Zingaro},  title = {A Language-based Approach for Interoperability of IoT Platforms},  booktitle = {51st Hawaii International Conference on System Sciences, {HICSS} 2018,  Hilton Waikoloa Village, Hawaii, USA, January 3-6, 2018},  year = {2018},  url = {http://aisel.aisnet.org/hicss-51/st/mobile_app_development/3},  timestamp = {Wed, 06 Jun 2018 10:44:30 +0200},  biburl = {https://dblp.org/rec/bib/conf/hicss/GabbrielliGLZ18},  publisher = {{AIS} Electronic Library (AISeL)},  bibsource = {dblp computer science bibliography, https://dblp.org} }",
    "links": [
      { "link" : "http://www.saveriogiallorenzo.com/publications/hicss2018/" },
      { "name" : "website", "link" : "http://www.cs.unibo.it/projects/jolie/jiot.html", "icon" : "website" }
    ],
    "abstract": "The Internet of Things (IoT) promotes the communication among heterogeneous entities, from small sensors to Cloud systems. However, this is realized using a wide range of communication media and data protocols, usually incompatible with each other. Thus, IoT systems tend to grow as homogeneous isolated platforms, which hardly interact. To achieve a higher degree of interoperability among disparate IoT platforms, we propose a language-based approach for communication technology integration. We build on the Jolie programming language, which allows programmers to easily make the same logic work over disparate communication stacks in a declarative, dynamic way. Jolie currently supports the main technologies from Service-Oriented Computing, such as TCP/IP, Bluetooth, and RMI at transport level, and HTTP and SOAP at application level. As technical result, we integrate in Jolie the two most adopted protocols for IoT communication, i.e., CoAP and MQTT. In this paper, we report our experience and we present high-level concepts valuable both for the general implementation of interoperable systems and for the development of other language-based solutions.",
    "tags" : [ "Microservices", "Internet of Things" ],
    "authors" : [ "Saverio Giallorenzo" ],
    "non_group" : true,
    "type" : "Conference"
  },
  {
    "bibitem": "@article{BC18, author = {Bogaerts, Bart and Cruz-Filipe, Lu{\\'i}s}, title = {Fixpoint Semantics for Active Integrity Constraints}, year = 2018, journal = {Artificial Intelligence}, month = feb, volume = 255, pages = {43--70}}",
    "links": [
      { "link" : "http://tinyurl.com/lcfilipe/pubs/paper46.pdf" }
    ],
    "tags": [ "Database Repair" ],
    "authors": [ "Luís Cruz-Filipe" ],
    "abstract": "Active integrity constraints (AICs) constitute a formalism to associate with a database not just the constraints it should adhere to, but also how to fix the database in case one or more of these constraints are violated. The intuitions regarding which repairs are &ldquo;good&rdquo; given such a description are closely related to intuitions that live in various areas of non-monotonic reasoning, such as logic programming and autoepistemic logic.<br />In this paper, we apply <i>approximation fixpoint theory</i>, an abstract, algebraic framework designed to unify semantics of non-monotonic logics, to the field of AICs. This results in a new family of semantics for AICs. We study properties of our new semantics and relationships to existing semantics. In particular, we argue that two of the newly defined semantics stand out. <i>Grounded repairs</i> have a simple definition that is purely based on semantic principles that semantics for AICs should adhere to. And, as we show, they coincide with the intended interpretation of AICs on many examples. The second semantics of interest is the AFT-well-founded semantics: it is a computationally cheap semantics that provides upper- and lower bounds for many other classes of repairs.",
    "non_group" : true,
    "type": "journal"
  }
]
}
