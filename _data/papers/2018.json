[
	{
		"bibitem": "@article{DBLP:journals/dc/CarboneMS18,  author = {Marco Carbone and  Fabrizio Montesi and  Carsten Sch{\\\"{u}}rmann},  title = {Choreographies, logically},  journal = {Distributed Computing},  volume = {31},  number = {1},  pages = {51--67},  year = {2018},  url = {https://doi.org/10.1007/s00446-017-0295-1},  doi = {10.1007/s00446-017-0295-1},  timestamp = {Thu, 25 Jan 2018 11:13:07 +0100},  biburl = {https://dblp.org/rec/bib/journals/dc/CarboneMS18},  bibsource = {dblp computer science bibliography, https://dblp.org} }",
		"links": [
			{ "link": "http://fabriziomontesi.com/files/cms18.pdf" }
		],
		"abstract": "In Choreographic Programming, a distributed system is programmed by giving a choreography, a global description of its interactions, instead of separately specifying the behaviour of each of its processes. Process implementations in terms of a distributed language can then be automatically projected from a choreography. We present Linear Compositional Choreographies (LCC), a proof theory for reasoning about programs that modularly combine choreographies with processes. Using LCC, we logically reconstruct a semantics and a projection procedure for programs. For the first time, we also obtain a procedure for extracting choreographies from process terms.",
		"tags" : [ "Choreographic Programming", "Process Calculi", "Logic" ],
		"authors" : [ "Fabrizio Montesi" ],
		"type" : "Journal"
	},
  {
    "bibitem": "@inproceedings{GGLZ18,title={A Language-based Approach for Interoperability of IoT Platforms},author={Gabbrielli, Maurizio and Giallorenzo, Saverio and Lanese, Ivan and Zingaro, Stefano Pio},booktitle={Proceedings of the 51st Hawaii International Conference on System Sciences},year={2018}}",
    "links": [
      { "link" : "http://www.saveriogiallorenzo.com/publications/hicss2018/" },
      { "name" : "website", "link" : "http://www.cs.unibo.it/projects/jolie/jiot.html", "icon" : "website" }
    ],
    "abstract": "The Internet of Things (IoT) promotes the communication among heterogeneous entities, from small sensors to Cloud systems. However, this is realized using a wide range of communication media and data protocols, usually incompatible with each other. Thus, IoT systems tend to grow as homogeneous isolated platforms, which hardly interact. To achieve a higher degree of interoperability among disparate IoT platforms, we propose a language-based approach for communication technology integration. We build on the Jolie programming language, which allows programmers to easily make the same logic work over disparate communication stacks in a declarative, dynamic way. Jolie currently supports the main technologies from Service-Oriented Computing, such as TCP/IP, Bluetooth, and RMI at transport level, and HTTP and SOAP at application level. As technical result, we integrate in Jolie the two most adopted protocols for IoT communication, i.e., CoAP and MQTT. In this paper, we report our experience and we present high-level concepts valuable both for the general implementation of interoperable systems and for the development of other language-based solutions.",
    "tags" : [ "Microservices", "Internet of Things" ],
    "authors" : [ "Saverio Giallorenzo" ],
    "non_group" : true,
    "type" : "Conference"
  },
  {
    "bibitem": "@article{BC18, author = {Bogaerts, Bart and Cruz-Filipe, Lu{\\'i}s}, title = {Fixpoint Semantics for Active Integrity Constraints}, year = 2018, journal = {Artificial Intelligence}, month = feb, volume = 255, pages = {43--70}}",
    "links": [
      { "link" : "http://tinyurl.com/lcfilipe/pubs/paper46.pdf" }
    ],
    "tags": [ "Database Repair" ],
    "authors": [ "Lu√≠s Cruz-Filipe" ],
    "abstract": "Active integrity constraints (AICs) constitute a formalism to associate with a database not just the constraints it should adhere to, but also how to fix the database in case one or more of these constraints are violated. The intuitions regarding which repairs are &ldquo;good&rdquo; given such a description are closely related to intuitions that live in various areas of non-monotonic reasoning, such as logic programming and autoepistemic logic.<br />In this paper, we apply <i>approximation fixpoint theory</i>, an abstract, algebraic framework designed to unify semantics of non-monotonic logics, to the field of AICs. This results in a new family of semantics for AICs. We study properties of our new semantics and relationships to existing semantics. In particular, we argue that two of the newly defined semantics stand out. <i>Grounded repairs</i> have a simple definition that is purely based on semantic principles that semantics for AICs should adhere to. And, as we show, they coincide with the intended interpretation of AICs on many examples. The second semantics of interest is the AFT-well-founded semantics: it is a computationally cheap semantics that provides upper- and lower bounds for many other classes of repairs.",
    "non_group" : true,
    "type": "journal"
  }
]
